{"version":3,"sources":["PlayerCard.js","Sportscontent.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerCard","PFName","SkillDesc","UpComingMatchesList","Value","Id","match","CCode","VsCCode","className","src","alt","title","onError","event","target","MDate","Date","toLocaleString","Sportscontent","useState","playerList","setPlayerList","search","setSearch","loader","setLoader","useEffect","axios","get","then","value","data","sort","a","b","catch","error","console","log","filterdata","useMemo","length","filter","TName","toLowerCase","includes","sportsData","map","index","onChange","type","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAyBeA,MAvBf,YAAqE,IAAhDC,EAA+C,EAA/CA,OAAOC,EAAwC,EAAxCA,UAAUC,EAA8B,EAA9BA,oBAAoBC,EAAU,EAAVA,MAAMC,EAAI,EAAJA,GACtDC,EAAQH,EAAoB,GAAGI,MAAO,gDAAmBJ,EAAoB,GAAGI,MAA1C,OAAqDJ,EAAoB,GAAGK,WAAkB,KAI1I,OACI,sBAAKC,UAAU,sBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKC,IAAG,0BAAqBL,EAArB,QAA+BM,IAAI,SAASC,MAAOX,EAAQY,QANjE,SAACC,GACXA,EAAMC,OAAOL,IAAI,kCAOb,sBAAKD,UAAU,sBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,SAA8BR,IAC9B,qBAAKQ,UAAU,eAAf,SAA+BP,OAEnC,sBAAKO,UAAU,eAAf,UAA8B,2CAA9B,KAAqDL,KACrD,qBAAKK,UAAU,yBAAf,SAAyCH,IACzC,qBAAKG,UAAU,oBAAf,SAAoCN,EAAoB,GAAGa,OAAS,IAAIC,KAAJ,UAAYd,EAAoB,GAAGa,MAAnC,SAAgDE,0BCmCrHC,MAjDf,WAEI,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACNC,IAAMC,IAAI,8CAA8CC,MAAK,SAAAC,GAC7DL,GAAU,GACVK,EAAMC,KAAKX,WAAWY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE9B,MAAM+B,EAAE/B,SAC/CkB,EAAcS,EAAMC,KAAKX,eAAce,OAAM,SAAAC,GAC3CC,QAAQC,IAAIF,QAEf,IAEH,IAAMG,EAAWC,mBAAQ,WACrB,OAAGlB,EAAOmB,OAAO,EAERrB,EAEAA,EAAWsB,QAAO,gBAAE1C,EAAF,EAAEA,OAAO2C,EAAT,EAASA,MAAT,OAAkB3C,EAAO4C,cAAcC,SAASvB,EAAOsB,gBAAkBD,EAAMC,cAAcC,SAASvB,EAAOsB,oBACzI,CAACtB,EAAQF,IAON0B,EAAWP,EAAWQ,KAAI,SAACjB,EAAMkB,GAAP,OAAe,cAAC,EAAD,eAA4BlB,GAAXkB,MAElE,OACE,qCACE,sBAAKxC,UAAU,iBAAf,UACI,oBAAIA,UAAU,cAAd,gCACA,uBAAOyC,SAVK,SAAC,GAAc,IAAbnC,EAAY,EAAZA,OAClBS,EAAUT,EAAOgB,QASeoB,KAAK,OAAOC,YAAY,kBAGxD,qBAAK3C,UAAU,cAAf,SAEMgB,EAAS,qBAAKhB,UAAU,WACxB,qBAAKA,UAAU,wBAAf,SAC2B,IAAtB+B,EAAWE,OAAe,qBAAKjC,UAAU,YAAf,8BAAoDsC,UCpChFM,MARf,WACE,OACE,qBAAK5C,UAAU,MAAf,SACI,cAAC,EAAD,OCOO6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.256f080a.chunk.js","sourcesContent":["import React from 'react'\n\nfunction PlayerCard({PFName,SkillDesc,UpComingMatchesList,Value,Id}){\n    const match = UpComingMatchesList[0].CCode? <span>Next Match: {UpComingMatchesList[0].CCode} vs {UpComingMatchesList[0].VsCCode}</span> : null;\n    const onError=(event)=>{\n        event.target.src=\"./player-images/no-img.jpg\"\n    }\n    return (\n        <div className=\"player-card-wrapper\">\n            <div className=\"player-card-img\">\n                <img src={`./player-images/${Id}.jpg`} alt=\"no img\" title={PFName} onError={onError} />\n            </div>\n            <div className=\"player-card-content\">\n                <div className=\"player-info\">\n                    <div className=\"player-name\">{PFName}</div>\n                    <div className=\"player-skill\">{SkillDesc}</div>\n                </div>\n                <div className=\"player-value\"><span>value: </span>$ {Value}</div>\n                <div className=\"player-upcomming-match\">{match}</div>\n                <div className=\"player-next-match\">{UpComingMatchesList[0].MDate && new Date(`${UpComingMatchesList[0].MDate} UTC`).toLocaleString()}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlayerCard","import React, { useEffect,useMemo,useState } from 'react'\nimport axios from 'axios'\nimport './Sportscontent.css'\nimport PlayerCard from './PlayerCard'\n\nfunction Sportscontent()\n{\n    const [playerList,setPlayerList]= useState([]);\n    const [search, setSearch] = useState('');\n    const [loader,setLoader]= useState(true);\n\n    useEffect(() => { \n        axios.get(\"https://api.npoint.io/20c1afef1661881ddc9c\").then(value=>{\n        setLoader(false);\n        value.data.playerList.sort((a, b) => a.Value-b.Value);\n        setPlayerList(value.data.playerList)}).catch(error => {\n          console.log(error);\n        });\n    }, []) \n\n    const filterdata=useMemo(() => {\n        if(search.length<3)\n        {\n          return playerList;\n        }\n          return playerList.filter(({PFName,TName})=>PFName.toLowerCase().includes(search.toLowerCase()) || TName.toLowerCase().includes(search.toLowerCase()) );\n    }, [search, playerList])\n\n\n    const getPlayer = ({target}) => {\n      setSearch(target.value);\n    }\n\n    const sportsData=filterdata.map((value,index)=><PlayerCard key={index} {...value} />)\n            \n  return (\n    <>\n      <div className=\"search-nav-bar\"> \n          <h2 className=\"nav-heading\">Sportz Interactive</h2>\n          <input onChange={getPlayer} type=\"text\" placeholder=\"Search ...\"/>\n      </div>\n      \n      <div className=\"player-list\">\n          {\n            loader ? <div className=\"loader\"></div> :\n            <div className=\"player-card-conatiner\">\n                {filterdata.length === 0 ? <div className=\"no-result\"> No Match found </div> : sportsData}\n            </div>\n          }\n      </div>\n    </>\n  )\n}\n\nexport default Sportscontent","import Sportscontent from './Sportscontent'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Sportscontent/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}